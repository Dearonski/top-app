import "./../../globals.css";
import type { Metadata } from "next";
import { Header } from "../../layout/Header/Header";
import { Footer } from "../../layout/Footer/Footer";
import { Sidebar } from "../../layout/Sidebar/Sidebar";
import { Inter } from "next/font/google";
import { getMenu } from "../../../api/api";
import { MenuItem } from "../../../interfaces/menu.interface";
import { AppContextProvider } from "../../../context/app.context";
import { firstLevelMenu } from "../../../helpers/helpers";
import { notFound } from "next/navigation";
import { Up } from "../../../components";

const inter = Inter({ subsets: ["latin"] });

export async function generateMetadata({
    params,
}: {
    params: { type: string };
}): Promise<Metadata> {
    const type = params.type;
    const firstCategoryItem =
        firstLevelMenu.find((m) => {
            if (m.route == type) {
                return true;
            }
        }) || firstLevelMenu[0];

    return {
        title: firstCategoryItem.name,
        description: "Generated by create next app",
    };
}

export default async function RootLayout({
    params,
    children,
}: {
    params: { alias: string; type: string };
    children: React.ReactNode;
}) {
    const firstCategoryItem = firstLevelMenu.find((m) => {
        if (m.route == params.type) {
            return true;
        }
    });
    if (!firstCategoryItem) {
        return notFound();
    }
    const menu: MenuItem[] = await getMenu(firstCategoryItem.id);

    return (
        <html lang="ru">
            <head>
                <link rel="preconnect" href="https://fonts.googleapis.com" />
                <link
                    rel="preconnect"
                    href="https://fonts.gstatic.com"
                    crossOrigin="anonymous"
                />
                <link
                    href="https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&family=Noto+Sans:wght@300;400;500;700&display=swap"
                    rel="stylesheet"
                />
            </head>
            <body className={inter.className}>
                <div className="grid grid-cols-main_mobile grid-rows-main min-h-screen gap-[10px] lg:gap-x-[30px] lg:gap-y-10 lg:grid-cols-main grid-areas-main_mobile lg:grid-areas-main">
                    <AppContextProvider
                        menu={menu}
                        firstCategory={firstCategoryItem.id}
                    >
                        <Header className="grid-in-header lg:hidden" />
                        <Sidebar className="grid-in-sidebar hidden lg:grid" />
                    </AppContextProvider>
                    <div className="grid-in-body lg:p-0 p-[15px] outline-none">
                        {children}
                    </div>
                    <Footer className="grid-in-footer" />
                    <Up />
                </div>
            </body>
        </html>
    );
}
